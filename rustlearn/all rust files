fn main() {
    let mut x = 4;
    println!("x is : {}",x);
    x = 2;
    println!("x is : {} ", x);
}



fn main() {
    const SECONDS_IN_MINUTE: u32 = 60;
    println!("{}", SECONDS_IN_MINUTE);
}



fn main() {
    const SECONDS_IN_MINUTE: u32 = 60;
    const SECONDS_IN_MINUTE: u32 = 40;//constant cant be redeclared this is wrong technique...

    println!("{}", SECONDS_IN_MINUTE);
}

fn main() {
    let x: i32 = 4; // explicit variable decleration 
    let x = 5;      // implicit variable decleration
    i8 
    i16
    i32
    i64 // these can be used to store negative as well as positive number
    i128 // these all are signed int and we cant make it float to store decimal 
    let x: u32 = 23; //these type can only be used to store positive inteager. It is unsigned inteager...
    // i8 contains 255 values from -128 to 127
    // u8 contains 255 values from 0 to 255
    let floating_point = 20.90;
    let true_or_false: bool = true;
    let letter = ';'

    let tup: (i32, bool, char) = (1, true, 's');
    tup.0 = 20;// assigning a new value by indexing to one element in an tuple
    tup = (20, false, 'a');// changing whole tuple value
    println!("{}", tup.0);// tup.1 for index 1 which is true...

// array
    let mut arr = [1,3, 4, 4, 2];// mut stands for mutable and new value can be assigned to mutable variables
    //let mut arr: [i32; 5] = [1,3, 4, 4, 2]; explicit defining
    arr[4] =  3;// assigning new variable to mutable element in an array's 4th element
    println!("{}", arr[4]);


}








